// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExtensionModule writeModule creates an extension module 1`] = `
import { ExtendingConstructor, Constructor, namespace, property } from "@tpluscode/rdfine";
import type { RdfResourceCore } from "@tpluscode/rdfine/RdfResource";
import * as $rdf from "@rdfjs/data-model";
import type * as RDF from "@rdfjs/types";
import { sh } from "@tpluscode/rdf-ns-builders";
import { dash } from "../../lib/namespace";
import type * as Dash from "../..";
import type * as  from "";

interface PropertyShapeEx<D extends RDF.DatasetCore = RDF.DatasetCore> {
}

declare module '@rdfine/shacl/lib/PropertyShape' {
    interface PropertyShape<D extends RDF.DatasetCore> extends PropertyShapeEx<D> {
    }
}

export function PropertyShapeMixinEx<Base extends ExtendingConstructor<, PropertyShapeEx>>(Resource: Base): Constructor<PropertyShapeEx & RdfResourceCore> & Base {
    @namespace(dash)
    class Impl extends Resource implements PropertyShapeEx {
    }
    return Impl
}
PropertyShapeMixinEx.appliesTo = sh.PropertyShape

`;
